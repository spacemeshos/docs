"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3459],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7988:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={id:"verification",title:"State Verification"},o=void 0,s={unversionedId:"start/smesher/verification",id:"start/smesher/verification",title:"State Verification",description:"This guide will show how to validate a downloaded state so that you can trust it. This guide is intended for advanced users.",source:"@site/docs/start/smesher/state.md",sourceDirName:"start/smesher",slug:"/start/smesher/verification",permalink:"/docs/start/smesher/verification",draft:!1,tags:[],version:"current",frontMatter:{id:"verification",title:"State Verification"},sidebar:"start",previous:{title:"Avoiding Equivocation",permalink:"/docs/start/smesher/equivocation"},next:{title:"Additional Advanced Topics",permalink:"/docs/start/smesher/advanced"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This guide will show how to validate a downloaded state so that you can trust it. This guide is intended for advanced users."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"You need to be able to run TWO full go-spacemesh nodes on the system.\nWe will call one node a ",(0,i.kt)("inlineCode",{parentName:"p"},"state_provider")," and the second one a ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator"),"."),(0,i.kt)("p",null,"Let's assume that the data for the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_provider")," is placed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"./state_provider")," directory. The ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")," is another node that will be responsible for validating that state. It may be ",(0,i.kt)("em",{parentName:"p"},"any")," running node, just with proper (direct & blocklist) config adjustments. Please adjust accordingly if the setup is different."),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("p",null,"We will run two nodes on one system, at the same time. The ",(0,i.kt)("inlineCode",{parentName:"p"},"state_provider"),' will have the data downloaded from "the Internet" and this state is unknown to the ',(0,i.kt)("inlineCode",{parentName:"p"},"state_validator"),"."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Base configs")),(0,i.kt)("p",null,"Config for ",(0,i.kt)("inlineCode",{parentName:"p"},"state_provider")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "api": {\n      "grpc-json-listener": "",\n      "grpc-private-listener": "127.0.0.1:59093",\n      "grpc-public-listener": "127.0.0.1:59092"\n    },\n    "p2p": {\n        "listen": "/ip4/127.0.0.1/tcp/56000",\n        "min-peers": 1,\n        "low-peers": 1,\n        "high-peers": 1,\n        "disable-dht": true,\n        "bootnodes": [],\n        "ip4-blocklist":[],\n        "ip6-blocklist":[]\n    }\n}\n')),(0,i.kt)("p",null,"Config for ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "api": {\n      "grpc-json-listener": "",\n      "grpc-private-listener": "127.0.0.1:49093",\n      "grpc-public-listener": "127.0.0.1:49092"\n    },\n    "p2p": {\n        "listen": "/ip4/127.0.0.1/tcp/46000",\n        "ip4-blocklist":[],\n        "ip6-blocklist":[]\n    }\n}\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Launch the nodes")),(0,i.kt)("p",null,"Let's launch the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_provider")," as:\n",(0,i.kt)("inlineCode",{parentName:"p"},"./go-spacemesh --config state_provider/config.json -d ./state_provider --smeshing-opts-datadir ./state_provider/post --filelock state_provider/syncer.lock")),(0,i.kt)("p",null,"Let's launch the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")," as:\n",(0,i.kt)("inlineCode",{parentName:"p"},"./go-spacemesh --config state_validator/config.json -d ./state_validator --smeshing-opts-datadir ./state_validator/post --filelock state_validator/syncer.lock")),(0,i.kt)("p",null,"You will need to obtain the network id from both of the nodes via\n",(0,i.kt)("inlineCode",{parentName:"p"},"grpcurl -plaintext 127.0.0.1:46000 spacemesh.v1.DebugService.NetworkInfo")," keep it as ",(0,i.kt)("inlineCode",{parentName:"p"},"STATE_VALIDATOR_P2P_ID"),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"grpcurl -plaintext 127.0.0.1:56000 spacemesh.v1.DebugService.NetworkInfo")," keep it as ",(0,i.kt)("inlineCode",{parentName:"p"},"STATE_PROVIDER_P2P_ID")),(0,i.kt)("p",null,"Stop them after acquiring this information."),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Adjust the configs")),(0,i.kt)("p",null,"Now edit both configs so they look like this:"),(0,i.kt)("p",null,"Config for ",(0,i.kt)("inlineCode",{parentName:"p"},"state_provider")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "api": {\n      "grpc-json-listener": "",\n      "grpc-private-listener": "127.0.0.1:59093",\n      "grpc-public-listener": "127.0.0.1:59092"\n    },\n    "p2p": {\n        "listen": "/ip4/127.0.0.1/tcp/56000",\n        "min-peers": 1,\n        "low-peers": 1,\n        "high-peers": 1,\n        "disable-dht": true,\n        "bootnodes": [],\n        "ip4-blocklist":[],\n        "ip6-blocklist":[],\n        "direct": [\n            "/ip4/127.0.0.1/tcp/46000/p2p/{STATE_VALIDATOR_P2P_ID}"\n        ]\n    }\n}\n')),(0,i.kt)("p",null,"Config for ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "api": {\n      "grpc-json-listener": "",\n      "grpc-private-listener": "127.0.0.1:49093",\n      "grpc-public-listener": "127.0.0.1:49092"\n    },\n    "p2p": {\n        "listen": "/ip4/127.0.0.1/tcp/46000",\n        "ip4-blocklist":[],\n        "ip6-blocklist":[],\n        "direct": [\n            "/ip4/127.0.0.1/tcp/56000/p2p/{STATE_PROVIDER_P2P_ID}"\n        ]\n    }\n}\n')),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Launch the nodes again")),(0,i.kt)("p",null,"Let's launch the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_provider")," as:\n",(0,i.kt)("inlineCode",{parentName:"p"},"./go-spacemesh --config state_provider/config.json -d ./state_provider --smeshing-opts-datadir ./state_provider/post --filelock state_provider/syncer.lock")),(0,i.kt)("p",null,"Let's launch the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")," as:\n",(0,i.kt)("inlineCode",{parentName:"p"},"./go-spacemesh --config state_validator/config.json -d ./state_validator --smeshing-opts-datadir ./state_validator/post --filelock state_validator/syncer.lock")),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Wait for the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")," to sync. Given that the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")," is an empty node it will take time to sync fully.\nAdditionally, because each ATX needs about 100 - 200ms to validate, you'll observe half of the CPU cores being utilized for the ATX validation.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"After the sync is done in the ",(0,i.kt)("inlineCode",{parentName:"p"},"state_validator")," directory there will be a perfectly validated state.sql"))))}d.isMDXComponent=!0}}]);